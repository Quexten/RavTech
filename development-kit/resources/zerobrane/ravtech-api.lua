return {
  Animator = {
    type = "class",
    valuetype = "Animator",
    inherits = "GameComponent",
    childs = {
      currentAnimation = {
        type = "value",
        valuetype = "Animation",
      },
      animations = {
        type = "value",
        valuetype = "ObjectMap",
      },
      onCompleteAnimation = {
        type = "value",
        valuetype = "String",
      },
      speed = {
        type = "value",
        valuetype = "float",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setAnimation = {
        type = "method",
        description = "",
        args = "(animation : String)",
        returns = "void",
        valuetype = "void",
      },
      setOnCompleteAnimation = {
        type = "method",
        description = "",
        args = "(animation : String)",
        returns = "void",
        valuetype = "void",
      },
      addAnimation = {
        type = "method",
        description = "",
        args = "(animation : String)",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      toString = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  AudioEmitter = {
    type = "class",
    valuetype = "AudioEmitter",
    inherits = "GameComponent",
    childs = {
      filePath = {
        type = "value",
        valuetype = "String",
      },
      isMusic = {
        type = "value",
        valuetype = "boolean",
      },
      playOnCreate = {
        type = "value",
        valuetype = "boolean",
      },
      loop = {
        type = "value",
        valuetype = "boolean",
      },
      id = {
        type = "value",
        valuetype = "long",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setClip = {
        type = "method",
        description = "",
        args = "(path : String)",
        returns = "void",
        valuetype = "void",
      },
      setPitch = {
        type = "method",
        description = "",
        args = "(pitch : float)",
        returns = "void",
        valuetype = "void",
      },
      play = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
    },
  },
  B2DSeparator = {
    type = "class",
    valuetype = "B2DSeparator",
    childs = {
      PPM = {
        type = "value",
        valuetype = "float",
      },
      separate = {
        type = "method",
        description = "",
        args = "(body : Body, fixtureDef : FixtureDef, verticesVec : Vector2[], polygonCollider : PolygonCollider)",
        returns = "void",
        valuetype = "void",
      },
      validate = {
        type = "method",
        description = [[        
        	  specifically, it makes sure there are no overlapping segments and the vertices are in clockwise order). It is recommended        
        	  that you use this method for debugging only, because it may cost more CPU usage.        
        	  <p>        
        	   verticesVec The vertices to be validated.        
        	  Returns An integer which can have the following values:        
        	          <ul>        
        	          <li>0 if the vertices can be properly processed.<li>        
        	          <li>1 If there are overlapping lines.<li>        
        	          <li>2 if the points are <b>not<b> in clockwise order.<li>        
        	          <li>3 if there are overlapping lines <b>and<b> the points are <b>not<b> in clockwise order.<li>        
        	          <ul>        
        	        ]], 
        args = "(verticesVec : Vector2[])",
        returns = "int",
        valuetype = "int",
      },
      calcShapes = {
        type = "method",
        description = "",
        args = "(verticesVec : ArrayList<Vector2>)",
        returns = "ArrayList<ArrayList<Vector2>>",
        valuetype = "ArrayList<ArrayList<Vector2>>",
      },
      hitRay = {
        type = "method",
        description = "",
        args = "(x1 : float, y1 : float, x2 : float, y2 : float, x3 : float, y3 : float, x4 : float, y4 : float)",
        returns = "Vector2",
        valuetype = "Vector2",
      },
      hitSegment = {
        type = "method",
        description = "",
        args = "(x1 : float, y1 : float, x2 : float, y2 : float, x3 : float, y3 : float, x4 : float, y4 : float)",
        returns = "Vector2",
        valuetype = "Vector2",
      },
      isOnSegment = {
        type = "method",
        description = "",
        args = "(px : float, py : float, x1 : float, y1 : float, x2 : float, y2 : float)",
        returns = "boolean",
        valuetype = "boolean",
      },
      pointsMatch = {
        type = "method",
        description = "",
        args = "(x1 : float, y1 : float, x2 : float, y2 : float)",
        returns = "boolean",
        valuetype = "boolean",
      },
      isOnLine = {
        type = "method",
        description = "",
        args = "(px : float, py : float, x1 : float, y1 : float, x2 : float, y2 : float)",
        returns = "boolean",
        valuetype = "boolean",
      },
      det = {
        type = "method",
        description = "",
        args = "(x1 : float, y1 : float, x2 : float, y2 : float, x3 : float, y3 : float)",
        returns = "float",
        valuetype = "float",
      },
      err = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      reverse = {
        type = "method",
        description = "",
        args = "(vec1 : ArrayList<Vector2>)",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  Box2dCollider = {
    type = "class",
    valuetype = "Box2dCollider",
    inherits = "GameComponent",
    childs = {
      density = {
        type = "value",
        valuetype = "float",
      },
      filter = {
        type = "value",
        valuetype = "Filter",
      },
      friction = {
        type = "value",
        valuetype = "float",
      },
      isSensor = {
        type = "value",
        valuetype = "boolean",
      },
      restitution = {
        type = "value",
        valuetype = "float",
      },
      fixture = {
        type = "value",
        valuetype = "Fixture",
      },
      canEdit = {
        type = "value",
        valuetype = "boolean",
      },
      apply = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      rebuildAll = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      getDensity = {
        type = "method",
        description = "",
        args = "()",
        returns = "float",
        valuetype = "float",
      },
      getFriction = {
        type = "method",
        description = "",
        args = "()",
        returns = "float",
        valuetype = "float",
      },
      isSensor = {
        type = "method",
        description = "",
        args = "()",
        returns = "boolean",
        valuetype = "boolean",
      },
      getRestitution = {
        type = "method",
        description = "",
        args = "()",
        returns = "float",
        valuetype = "float",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
    },
  },
  BoxCollider = {
    type = "class",
    valuetype = "BoxCollider",
    inherits = "Box2dCollider",
    childs = {
      x = {
        type = "value",
        valuetype = "float",
      },
      width = {
        type = "value",
        valuetype = "float",
      },
      height = {
        type = "value",
        valuetype = "float",
      },
      angle = {
        type = "value",
        valuetype = "float",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setPosition = {
        type = "method",
        description = "",
        args = "(x : float, y : float)",
        returns = "void",
        valuetype = "void",
      },
      getPosition = {
        type = "method",
        description = "",
        args = "()",
        returns = "Vector2",
        valuetype = "Vector2",
      },
      setBounds = {
        type = "method",
        description = "",
        args = "(width : float, height : float)",
        returns = "void",
        valuetype = "void",
      },
      getBounds = {
        type = "method",
        description = "",
        args = "()",
        returns = "Vector2",
        valuetype = "Vector2",
      },
      setAngle = {
        type = "method",
        description = "",
        args = "(angle : float)",
        returns = "void",
        valuetype = "void",
      },
      getAngle = {
        type = "method",
        description = "",
        args = "()",
        returns = "float",
        valuetype = "float",
      },
      apply = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
    },
  },
  CircleCollider = {
    type = "class",
    valuetype = "CircleCollider",
    inherits = "Box2dCollider",
    childs = {
      x = {
        type = "value",
        valuetype = "float",
      },
      radius = {
        type = "value",
        valuetype = "float",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      setRadius = {
        type = "method",
        description = "",
        args = "(radius : float)",
        returns = "void",
        valuetype = "void",
      },
      getRadius = {
        type = "method",
        description = "",
        args = "()",
        returns = "float",
        valuetype = "float",
      },
      setPosition = {
        type = "method",
        description = "",
        args = "(x : float, y : float)",
        returns = "void",
        valuetype = "void",
      },
      getPosition = {
        type = "method",
        description = "",
        args = "()",
        returns = "Vector2",
        valuetype = "Vector2",
      },
      apply = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
    },
  },
  ComponentType = {
    type = "class",
    valuetype = "ComponentType",
    childs = {
      Default = {
        type = "value",
        valuetype = "ComponentType",
      },
      GameObject = {
        type = "value",
        valuetype = "ComponentType",
      },
      SpriteRenderer = {
        type = "value",
        valuetype = "ComponentType",
      },
      Renderer = {
        type = "value",
        valuetype = "ComponentType",
      },
      Transform = {
        type = "value",
        valuetype = "ComponentType",
      },
      Rigidbody = {
        type = "value",
        valuetype = "ComponentType",
      },
      BoxCollider = {
        type = "value",
        valuetype = "ComponentType",
      },
      CircleCollider = {
        type = "value",
        valuetype = "ComponentType",
      },
      AudioEmitter = {
        type = "value",
        valuetype = "ComponentType",
      },
      Light = {
        type = "value",
        valuetype = "ComponentType",
      },
      Animator = {
        type = "value",
        valuetype = "ComponentType",
      },
      PolygonCollider = {
        type = "value",
        valuetype = "ComponentType",
      },
      ScriptComponent = {
        type = "value",
        valuetype = "ComponentType",
      },
      FontRenderer = {
        type = "value",
        valuetype = "ComponentType",
      },
    },
  },
  Debug = {
    type = "class",
    valuetype = "Debug",
    childs = {
      logColor = {
        type = "value",
        valuetype = "Color",
      },
      errorColor = {
        type = "value",
        valuetype = "Color",
      },
      debugColor = {
        type = "value",
        valuetype = "Color",
      },
      debugPerformance = {
        type = "value",
        valuetype = "boolean",
      },
      debugLogging = {
        type = "value",
        valuetype = "boolean",
      },
      debugLineShapes = {
        type = "value",
        valuetype = "Array",
      },
      debugFilledShapes = {
        type = "value",
        valuetype = "Array",
      },
      map = {
        type = "value",
        valuetype = "ObjectMap",
      },
      log = {
        type = "method",
        description = "",
        args = "(tag : String, message : Object)",
        returns = "void",
        valuetype = "void",
      },
      logError = {
        type = "method",
        description = "",
        args = "(tag : String, message : Object)",
        returns = "void",
        valuetype = "void",
      },
      logDebug = {
        type = "method",
        description = "",
        args = "(tag : String, message : Object)",
        returns = "void",
        valuetype = "void",
      },
      drawRay = {
        type = "method",
        description = "",
        args = "(start : Vector2, dir : float, color : Color)",
        returns = "void",
        valuetype = "void",
      },
      drawLine = {
        type = "method",
        description = "",
        args = "(start : Vector2, end : Vector2, color : Color)",
        returns = "void",
        valuetype = "void",
      },
      drawCircle = {
        type = "method",
        description = "",
        args = "(middlePosition : Vector2, radius : float, color : Color, filled : boolean)",
        returns = "void",
        valuetype = "void",
      },
      drawRectangle = {
        type = "method",
        description = "",
        args = "(middlePosition : Vector2, size : Vector2, color : Color, filled : boolean)",
        returns = "void",
        valuetype = "void",
      },
      render = {
        type = "method",
        description = "",
        args = "(renderer : ShapeRenderer)",
        returns = "void",
        valuetype = "void",
      },
      startTimer = {
        type = "method",
        description = "",
        args = "(name : String)",
        returns = "void",
        valuetype = "void",
      },
      endTimer = {
        type = "method",
        description = "",
        args = "(name : String)",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  FontRenderer = {
    type = "class",
    valuetype = "FontRenderer",
    inherits = "Renderer",
    childs = {
      path = {
        type = "value",
        valuetype = "String",
      },
      font = {
        type = "value",
        valuetype = "BitmapFont",
      },
      text = {
        type = "value",
        valuetype = "String",
      },
      centered = {
        type = "value",
        valuetype = "boolean",
      },
      flipped = {
        type = "value",
        valuetype = "boolean",
      },
      xOffset = {
        type = "value",
        valuetype = "float",
      },
      yOffset = {
        type = "value",
        valuetype = "float",
      },
      xScale = {
        type = "value",
        valuetype = "float",
      },
      yScale = {
        type = "value",
        valuetype = "float",
      },
      tint = {
        type = "value",
        valuetype = "Color",
      },
      minFilter = {
        type = "value",
        valuetype = "TextureFilter",
      },
      magFilter = {
        type = "value",
        valuetype = "TextureFilter",
      },
      fontMatrix = {
        type = "value",
        valuetype = "Matrix4",
      },
      resetMatrix = {
        type = "value",
        valuetype = "Matrix4",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setText = {
        type = "method",
        description = [[        
        	   text - the text        ]], 
        args = "(text : String)",
        returns = "void",
        valuetype = "void",
      },
      getText = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      setColor = {
        type = "method",
        description = [[        
        	   color - the tint        ]], 
        args = "(color : Color)",
        returns = "void",
        valuetype = "void",
      },
      getColor = {
        type = "method",
        description = "",
        args = "()",
        returns = "Color",
        valuetype = "Color",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
      setFont = {
        type = "method",
        description = "",
        args = "(path : String)",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  GameComponent = {
    type = "class",
    valuetype = "GameComponent",
    childs = {
      parent = {
        type = "value",
        valuetype = "GameObject",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setParent = {
        type = "method",
        description = [[        
        	   parent - the new parent        ]], 
        args = "(parent : GameObject)",
        returns = "void",
        valuetype = "void",
      },
      getParent = {
        type = "method",
        description = [[        
        	  Returns The parent of the component        ]], 
        args = "()",
        returns = "GameObject",
        valuetype = "GameObject",
      },
      isDescendantOf = {
        type = "method",
        description = [[        
        	   object - the GameObject        
        	  Returns Whether the component is a descendant of the object.        ]], 
        args = "(object : GameObject)",
        returns = "boolean",
        valuetype = "boolean",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  GameObject = {
    type = "class",
    valuetype = "GameObject",
    inherits = "GameComponent",
    childs = {
      name = {
        type = "value",
        valuetype = "String",
      },
      transform = {
        type = "value",
        valuetype = "Transform",
      },
      components = {
        type = "value",
        valuetype = "Array",
      },
      isPrefab = {
        type = "value",
        valuetype = "boolean",
      },
      prefabPath = {
        type = "value",
        valuetype = "String",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      destroy = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      readValue = {
        type = "method",
        description = "",
        args = "(json : Json, currententry : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      Instantiate = {
        type = "method",
        description = [[        
        	   prefabpath - path to the prefab in the project        
        	   position - position of the Instantiated prefab        
        	   rotation - rotation of the Instantiated prefab        
        	  Returns the instance of the prefab        ]], 
        args = "(prefabpath : String, position : Vector2, rotation : float)",
        returns = "GameObject",
        valuetype = "GameObject",
      },
      addComponent = {
        type = "method",
        description = [[        
        	   component - the component to add        
        	  Returns The GameObjects for chaining.        ]], 
        args = "(component : GameComponent)",
        returns = "GameObject",
        valuetype = "GameObject",
      },
      getComponents = {
        type = "method",
        description = "",
        args = "()",
        returns = "Array<GameComponent>",
        valuetype = "Array<GameComponent>",
      },
      getComponentByName = {
        type = "method",
        description = "",
        args = "(name : String)",
        returns = "GameComponent",
        valuetype = "GameComponent",
      },
      getComponentsByName = {
        type = "method",
        description = "",
        args = "(name : String)",
        returns = "Array<GameComponent>",
        valuetype = "Array<GameComponent>",
      },
      getComponentByType = {
        type = "method",
        description = "",
        args = "(rigidbody : ComponentType)",
        returns = "GameComponent",
        valuetype = "GameComponent",
      },
      getComponentsByType = {
        type = "method",
        description = "",
        args = "(type : ComponentType)",
        returns = "Array<GameComponent>",
        valuetype = "Array<GameComponent>",
      },
      getGameObjectsInChildren = {
        type = "method",
        description = "",
        args = "()",
        returns = "Array<GameObject>",
        valuetype = "Array<GameObject>",
      },
      getComponentsInChildren = {
        type = "method",
        description = [[        
        	  Returns all components of the specified type in the gameobject or any of it's children.        ]], 
        args = "(string : String)",
        returns = "Array<GameComponent>",
        valuetype = "Array<GameComponent>",
      },
      removeComponent = {
        type = "method",
        description = "",
        args = "(component : GameComponent)",
        returns = "void",
        valuetype = "void",
      },
      find = {
        type = "method",
        description = "",
        args = "(name : String)",
        returns = "GameObject",
        valuetype = "GameObject",
      },
      findAll = {
        type = "method",
        description = "",
        args = "(name : String)",
        returns = "Array<GameObject>",
        valuetype = "Array<GameObject>",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
    },
  },
  Light = {
    type = "class",
    valuetype = "Light",
    inherits = "Renderer",
    childs = {
      light = {
        type = "value",
        valuetype = "box2dLight.Light",
      },
      angle = {
        type = "value",
        valuetype = "float",
      },
      distance = {
        type = "value",
        valuetype = "float",
      },
      color = {
        type = "value",
        valuetype = "Color",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  PolygonCollider = {
    type = "class",
    valuetype = "PolygonCollider",
    inherits = "Box2dCollider",
    childs = {
      vertecies = {
        type = "value",
        valuetype = "Array",
      },
      fixtures = {
        type = "value",
        valuetype = "Array",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      apply = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setVertecies = {
        type = "method",
        description = "",
        args = "(vertecies : Vector2[])",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  Input = {
    type = "class",
    valuetype = "Input",
    childs = {
      mouseButtonStates = {
        type = "value",
        valuetype = "Array",
      },
      controllerStates = {
        type = "value",
        valuetype = "Array",
      },
      lastPointer = {
        type = "value",
        valuetype = "int",
      },
      getX = {
        type = "method",
        description = "",
        args = "()",
        returns = "int",
        valuetype = "int",
      },
      getDeltaX = {
        type = "method",
        description = "",
        args = "()",
        returns = "int",
        valuetype = "int",
      },
      getY = {
        type = "method",
        description = "",
        args = "()",
        returns = "int",
        valuetype = "int",
      },
      getDeltaY = {
        type = "method",
        description = "",
        args = "()",
        returns = "int",
        valuetype = "int",
      },
      getWorldPosition = {
        type = "method",
        description = "",
        args = "()",
        returns = "Vector2",
        valuetype = "Vector2",
      },
      isTouched = {
        type = "method",
        description = "",
        args = "()",
        returns = "boolean",
        valuetype = "boolean",
      },
      justTouched = {
        type = "method",
        description = "",
        args = "()",
        returns = "boolean",
        valuetype = "boolean",
      },
      lastPointer = {
        type = "method",
        description = "",
        args = "()",
        returns = "int",
        valuetype = "int",
      },
      isButtonPressed = {
        type = "method",
        description = "",
        args = "(button : int)",
        returns = "boolean",
        valuetype = "boolean",
      },
      isButtonJustPressed = {
        type = "method",
        description = "",
        args = "(button : int)",
        returns = "boolean",
        valuetype = "boolean",
      },
      isKeyPressed = {
        type = "method",
        description = "",
        args = "(key : int)",
        returns = "boolean",
        valuetype = "boolean",
      },
      isKeyJustPressed = {
        type = "method",
        description = "",
        args = "(key : int)",
        returns = "boolean",
        valuetype = "boolean",
      },
      getGamepadAxisValue = {
        type = "method",
        description = "",
        args = "(controller : int, axis : int)",
        returns = "float",
        valuetype = "float",
      },
      isGamepadButtonPressed = {
        type = "method",
        description = "",
        args = "(controller : int, button : int)",
        returns = "boolean",
        valuetype = "boolean",
      },
      isGamepadButtonJustPressed = {
        type = "method",
        description = "",
        args = "(controller : int, button : int)",
        returns = "boolean",
        valuetype = "boolean",
      },
      getGamepadPovDirection = {
        type = "method",
        description = "",
        args = "(controller : int)",
        returns = "PovDirection",
        valuetype = "PovDirection",
      },
    },
  },
  RavTech = {
    type = "class",
    valuetype = "RavTech",
    inherits = "Game",
    childs = {
      isEditor = {
        type = "value",
        valuetype = "boolean",
      },
      project = {
        type = "value",
        valuetype = "Project",
      },
      engineConfiguration = {
        type = "value",
        valuetype = "EngineConfiguration",
      },
      majorVersion = {
        type = "value",
        valuetype = "int",
      },
      minorVersion = {
        type = "value",
        valuetype = "int",
      },
      microVersion = {
        type = "value",
        valuetype = "int",
      },
      spriteBatch = {
        type = "value",
        valuetype = "SpriteBatch",
      },
      shapeRenderer = {
        type = "value",
        valuetype = "ShapeRenderer",
      },
      currentScene = {
        type = "value",
        valuetype = "Scene",
      },
      sceneHandler = {
        type = "value",
        valuetype = "SceneHandler",
      },
      files = {
        type = "value",
        valuetype = "RavFiles",
      },
      settings = {
        type = "value",
        valuetype = "RavSettings",
      },
      input = {
        type = "value",
        valuetype = "RavInput",
      },
      ui = {
        type = "value",
        valuetype = "RavUI",
      },
      scriptLoader = {
        type = "value",
        valuetype = "ScriptLoader",
      },
      create = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      render = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  Renderer = {
    type = "class",
    valuetype = "Renderer",
    inherits = "GameComponent",
    childs = {
      sortingOrder = {
        type = "value",
        valuetype = "int",
      },
      sortingLayerName = {
        type = "value",
        valuetype = "String",
      },
      enabled = {
        type = "value",
        valuetype = "boolean",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
    },
  },
  Rigidbody = {
    type = "class",
    valuetype = "Rigidbody",
    inherits = "GameComponent",
    childs = {
      body = {
        type = "value",
        valuetype = "Body",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      apply = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      onCollisionEnter = {
        type = "method",
        description = "",
        args = "(other : Fixture)",
        returns = "void",
        valuetype = "void",
      },
      onCollisionExit = {
        type = "method",
        description = "",
        args = "(other : Fixture)",
        returns = "void",
        valuetype = "void",
      },
      getBody = {
        type = "method",
        description = "",
        args = "()",
        returns = "Body",
        valuetype = "Body",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
    },
  },
  ScriptComponent = {
    type = "class",
    valuetype = "ScriptComponent",
    inherits = "GameComponent",
    childs = {
      script = {
        type = "value",
        valuetype = "Script",
      },
      scriptSource = {
        type = "value",
        valuetype = "String",
      },
      path = {
        type = "value",
        valuetype = "String",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableID : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      setScript = {
        type = "method",
        description = "",
        args = "(scriptPath : String)",
        returns = "void",
        valuetype = "void",
      },
      callFunction = {
        type = "method",
        description = "",
        args = "(name : String, args : Object[])",
        returns = "void",
        valuetype = "void",
      },
    },
  },
  SpriteRenderer = {
    type = "class",
    valuetype = "SpriteRenderer",
    inherits = "Renderer",
    childs = {
      texturePath = {
        type = "value",
        valuetype = "String",
      },
      texture = {
        type = "value",
        valuetype = "Texture",
      },
      width = {
        type = "value",
        valuetype = "float",
      },
      color = {
        type = "value",
        valuetype = "Color",
      },
      regionName = {
        type = "value",
        valuetype = "String",
      },
      srcX = {
        type = "value",
        valuetype = "int",
      },
      srcWidth = {
        type = "value",
        valuetype = "int",
      },
      useCustomSrc = {
        type = "value",
        valuetype = "boolean",
      },
      originX = {
        type = "value",
        valuetype = "float",
      },
      minFilter = {
        type = "value",
        valuetype = "TextureFilter",
      },
      magFilter = {
        type = "value",
        valuetype = "TextureFilter",
      },
      uWrap = {
        type = "value",
        valuetype = "TextureWrap",
      },
      vWrap = {
        type = "value",
        valuetype = "TextureWrap",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setTexture = {
        type = "method",
        description = "",
        args = "(texturePath : String)",
        returns = "void",
        valuetype = "void",
      },
      setColor = {
        type = "method",
        description = "",
        args = "(color : Color)",
        returns = "void",
        valuetype = "void",
      },
      getColor = {
        type = "method",
        description = "",
        args = "()",
        returns = "Color",
        valuetype = "Color",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableId : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableID : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
    },
  },
  Transform = {
    type = "class",
    valuetype = "Transform",
    inherits = "GameComponent",
    childs = {
      position = {
        type = "value",
        valuetype = "Vector2",
      },
      absolutePosition = {
        type = "value",
        valuetype = "Vector2",
      },
      flippedX = {
        type = "value",
        valuetype = "boolean",
      },
      flippedY = {
        type = "value",
        valuetype = "boolean",
      },
      rotation = {
        type = "value",
        valuetype = "float",
      },
      getType = {
        type = "method",
        description = "",
        args = "()",
        returns = "ComponentType",
        valuetype = "ComponentType",
      },
      getName = {
        type = "method",
        description = "",
        args = "()",
        returns = "String",
        valuetype = "String",
      },
      load = {
        type = "method",
        description = "",
        args = "(dependencies : Array<AssetDescriptor>)",
        returns = "void",
        valuetype = "void",
      },
      finishedLoading = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      update = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      draw = {
        type = "method",
        description = "",
        args = "(batch : SpriteBatch)",
        returns = "void",
        valuetype = "void",
      },
      dispose = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      updatePosition = {
        type = "method",
        description = "",
        args = "()",
        returns = "void",
        valuetype = "void",
      },
      setPosition = {
        type = "method",
        description = [[        
        	   x - the x component of the position        
        	   y - the y component of the position        ]], 
        args = "(x : float, y : float)",
        returns = "void",
        valuetype = "void",
      },
      getPosition = {
        type = "method",
        description = [[        
        	  Returns - the position        ]], 
        args = "()",
        returns = "Vector2",
        valuetype = "Vector2",
      },
      setLocalPosition = {
        type = "method",
        description = [[        
        	   x - the x component of the position        
        	   y - the y component of the position        ]], 
        args = "(x : float, y : float)",
        returns = "void",
        valuetype = "void",
      },
      getLocalPosition = {
        type = "method",
        description = [[        
        	  Returns - the position        ]], 
        args = "()",
        returns = "Vector2",
        valuetype = "Vector2",
      },
      setRotation = {
        type = "method",
        description = [[        
        	   rotation - the rotation        ]], 
        args = "(rotation : float)",
        returns = "void",
        valuetype = "void",
      },
      getRotation = {
        type = "method",
        description = [[        
        	  Returns - the absolute Rotation        ]], 
        args = "()",
        returns = "float",
        valuetype = "float",
      },
      setLocalRotation = {
        type = "method",
        description = [[        
        	   rotation - the rotation        ]], 
        args = "(rotation : float)",
        returns = "void",
        valuetype = "void",
      },
      getLocalRotation = {
        type = "method",
        description = [[        
        	  Returns - the local rotation of the transform        ]], 
        args = "()",
        returns = "float",
        valuetype = "float",
      },
      setFlipped = {
        type = "method",
        description = "",
        args = "(flippedX : boolean, flippedY : boolean)",
        returns = "void",
        valuetype = "void",
      },
      setFlippedX = {
        type = "method",
        description = "",
        args = "(flipped : boolean)",
        returns = "void",
        valuetype = "void",
      },
      setFlippedY = {
        type = "method",
        description = "",
        args = "(flipped : boolean)",
        returns = "void",
        valuetype = "void",
      },
      isFlippedX = {
        type = "method",
        description = "",
        args = "()",
        returns = "boolean",
        valuetype = "boolean",
      },
      isFlippedY = {
        type = "method",
        description = "",
        args = "()",
        returns = "boolean",
        valuetype = "boolean",
      },
      rotateTo = {
        type = "method",
        description = [[        
        	   target - the point the transform is rotated towards        ]], 
        args = "(toPoint : Vector2)",
        returns = "void",
        valuetype = "void",
      },
      write = {
        type = "method",
        description = "",
        args = "(json : Json)",
        returns = "void",
        valuetype = "void",
      },
      read = {
        type = "method",
        description = "",
        args = "(json : Json, jsonData : JsonValue)",
        returns = "void",
        valuetype = "void",
      },
      getVariableNames = {
        type = "method",
        description = "",
        args = "()",
        returns = "String[]",
        valuetype = "String[]",
      },
      setVariable = {
        type = "method",
        description = "",
        args = "(variableId : int, value : Object)",
        returns = "void",
        valuetype = "void",
      },
      getVariable = {
        type = "method",
        description = "",
        args = "(variableId : int)",
        returns = "Object",
        valuetype = "Object",
      },
      getVariableId = {
        type = "method",
        description = "",
        args = "(variableName : String)",
        returns = "int",
        valuetype = "int",
      },
      getValiables = {
        type = "method",
        description = "",
        args = "()",
        returns = "Object[]",
        valuetype = "Object[]",
      },
    },
  },
  UserData = {
    type = "class",
    valuetype = "UserData",
    childs = {
      isFlaggedForDelete = {
        type = "value",
        valuetype = "boolean",
      },
      component = {
        type = "value",
        valuetype = "Rigidbody",
      },
      tag = {
        type = "value",
        valuetype = "String",
      },
    },
  },
  this = {
    type = "class",
	valuetype = "this",
    inherits = "GameObject",
  },
}
